/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteRouteImport } from './routes/_auth/route'
import { Route as AppRouteRouteImport } from './routes/_app/route'
import { Route as AppIndexRouteImport } from './routes/_app/index'
import { Route as AuthResetPasswordIndexRouteImport } from './routes/_auth/reset-password/index'
import { Route as AuthLoginIndexRouteImport } from './routes/_auth/login/index'
import { Route as AuthForgotPasswordIndexRouteImport } from './routes/_auth/forgot-password/index'
import { Route as AppUsersIndexRouteImport } from './routes/_app/users/index'
import { Route as AppStudentsIndexRouteImport } from './routes/_app/students/index'
import { Route as AppPublishersIndexRouteImport } from './routes/_app/publishers/index'
import { Route as AppProfileIndexRouteImport } from './routes/_app/profile/index'
import { Route as AppLoansIndexRouteImport } from './routes/_app/loans/index'
import { Route as AppCoursesIndexRouteImport } from './routes/_app/courses/index'
import { Route as AppBooksIndexRouteImport } from './routes/_app/books/index'
import { Route as AppAuthorsIndexRouteImport } from './routes/_app/authors/index'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AuthResetPasswordIndexRoute = AuthResetPasswordIndexRouteImport.update({
  id: '/reset-password/',
  path: '/reset-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexRouteImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AppUsersIndexRoute = AppUsersIndexRouteImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppStudentsIndexRoute = AppStudentsIndexRouteImport.update({
  id: '/students/',
  path: '/students/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPublishersIndexRoute = AppPublishersIndexRouteImport.update({
  id: '/publishers/',
  path: '/publishers/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppProfileIndexRoute = AppProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppLoansIndexRoute = AppLoansIndexRouteImport.update({
  id: '/loans/',
  path: '/loans/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppCoursesIndexRoute = AppCoursesIndexRouteImport.update({
  id: '/courses/',
  path: '/courses/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppBooksIndexRoute = AppBooksIndexRouteImport.update({
  id: '/books/',
  path: '/books/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppAuthorsIndexRoute = AppAuthorsIndexRouteImport.update({
  id: '/authors/',
  path: '/authors/',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof AppIndexRoute
  '/authors': typeof AppAuthorsIndexRoute
  '/books': typeof AppBooksIndexRoute
  '/courses': typeof AppCoursesIndexRoute
  '/loans': typeof AppLoansIndexRoute
  '/profile': typeof AppProfileIndexRoute
  '/publishers': typeof AppPublishersIndexRoute
  '/students': typeof AppStudentsIndexRoute
  '/users': typeof AppUsersIndexRoute
  '/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/reset-password': typeof AuthResetPasswordIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/authors': typeof AppAuthorsIndexRoute
  '/books': typeof AppBooksIndexRoute
  '/courses': typeof AppCoursesIndexRoute
  '/loans': typeof AppLoansIndexRoute
  '/profile': typeof AppProfileIndexRoute
  '/publishers': typeof AppPublishersIndexRoute
  '/students': typeof AppStudentsIndexRoute
  '/users': typeof AppUsersIndexRoute
  '/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/reset-password': typeof AuthResetPasswordIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/authors/': typeof AppAuthorsIndexRoute
  '/_app/books/': typeof AppBooksIndexRoute
  '/_app/courses/': typeof AppCoursesIndexRoute
  '/_app/loans/': typeof AppLoansIndexRoute
  '/_app/profile/': typeof AppProfileIndexRoute
  '/_app/publishers/': typeof AppPublishersIndexRoute
  '/_app/students/': typeof AppStudentsIndexRoute
  '/_app/users/': typeof AppUsersIndexRoute
  '/_auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/_auth/reset-password/': typeof AuthResetPasswordIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/authors'
    | '/books'
    | '/courses'
    | '/loans'
    | '/profile'
    | '/publishers'
    | '/students'
    | '/users'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/authors'
    | '/books'
    | '/courses'
    | '/loans'
    | '/profile'
    | '/publishers'
    | '/students'
    | '/users'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
  id:
    | '__root__'
    | '/_app'
    | '/_auth'
    | '/_app/'
    | '/_app/authors/'
    | '/_app/books/'
    | '/_app/courses/'
    | '/_app/loans/'
    | '/_app/profile/'
    | '/_app/publishers/'
    | '/_app/students/'
    | '/_app/users/'
    | '/_auth/forgot-password/'
    | '/_auth/login/'
    | '/_auth/reset-password/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_auth/reset-password/': {
      id: '/_auth/reset-password/'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof AuthResetPasswordIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_auth/forgot-password/': {
      id: '/_auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_app/users/': {
      id: '/_app/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AppUsersIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/students/': {
      id: '/_app/students/'
      path: '/students'
      fullPath: '/students'
      preLoaderRoute: typeof AppStudentsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/publishers/': {
      id: '/_app/publishers/'
      path: '/publishers'
      fullPath: '/publishers'
      preLoaderRoute: typeof AppPublishersIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/profile/': {
      id: '/_app/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/loans/': {
      id: '/_app/loans/'
      path: '/loans'
      fullPath: '/loans'
      preLoaderRoute: typeof AppLoansIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/courses/': {
      id: '/_app/courses/'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof AppCoursesIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/books/': {
      id: '/_app/books/'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof AppBooksIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/authors/': {
      id: '/_app/authors/'
      path: '/authors'
      fullPath: '/authors'
      preLoaderRoute: typeof AppAuthorsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppAuthorsIndexRoute: typeof AppAuthorsIndexRoute
  AppBooksIndexRoute: typeof AppBooksIndexRoute
  AppCoursesIndexRoute: typeof AppCoursesIndexRoute
  AppLoansIndexRoute: typeof AppLoansIndexRoute
  AppProfileIndexRoute: typeof AppProfileIndexRoute
  AppPublishersIndexRoute: typeof AppPublishersIndexRoute
  AppStudentsIndexRoute: typeof AppStudentsIndexRoute
  AppUsersIndexRoute: typeof AppUsersIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppAuthorsIndexRoute: AppAuthorsIndexRoute,
  AppBooksIndexRoute: AppBooksIndexRoute,
  AppCoursesIndexRoute: AppCoursesIndexRoute,
  AppLoansIndexRoute: AppLoansIndexRoute,
  AppProfileIndexRoute: AppProfileIndexRoute,
  AppPublishersIndexRoute: AppPublishersIndexRoute,
  AppStudentsIndexRoute: AppStudentsIndexRoute,
  AppUsersIndexRoute: AppUsersIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthResetPasswordIndexRoute: typeof AuthResetPasswordIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthResetPasswordIndexRoute: AuthResetPasswordIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
